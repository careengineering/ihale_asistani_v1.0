import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

import streamlit as st
from src.data_preprocessing import load_synonyms, expand_question_with_synonyms
from src.retriever import load_embeddings, retrieve_top_k
from src.model import generate_answer
import os

st.set_page_config(page_title="Ä°hale AsistanÄ±", layout="wide")

st.title("ğŸ“˜ Ä°hale AsistanÄ±")
st.markdown("""
Ä°hale AsistanÄ±, kullanÄ±cÄ±larÄ±n ihale sÃ¼reÃ§lerine iliÅŸkin sorularÄ±na ilgili mevzuat maddelerini bularak yanÄ±t veren bir yapay zeka asistanÄ±dÄ±r. Bu araÃ§ herkese aÃ§Ä±k verilerden ve Ã¼cretsiz modellerden faydalanÄ±r.

ğŸ”” **UyarÄ±:** Bu sistem hukuki danÄ±ÅŸmanlÄ±k amacÄ± taÅŸÄ±maz. Verilen cevaplar mevzuatÄ±n Ã¶ne Ã§Ä±kan maddelerine dayansa da nihai kararlar iÃ§in resmi kaynaklar ve uzman gÃ¶rÃ¼ÅŸÃ¼ esas alÄ±nmalÄ±dÄ±r.
""")

EMBEDDING_PATH = "data/embeddings/ihale_embeddings.pkl"
SYNONYM_PATH = "data/EsAnlamlilar.csv"

st.sidebar.header("Ayarlar")
ihale_turu = st.sidebar.selectbox("Ä°hale TÃ¼rÃ¼", ["Genel", "Mal", "Hizmet", "YapÄ±m", "DanÄ±ÅŸmanlÄ±k"])

soru = st.text_input("ğŸ’¬ Sorunuzu yazÄ±nÄ±z:", placeholder="Ã–rn: diploma iÅŸ deneyim yerine geÃ§er mi?")

if st.button("ğŸš€ Sorgula") and soru:
    if not os.path.exists(EMBEDDING_PATH):
        st.error("Embedding dosyasÄ± bulunamadÄ±. LÃ¼tfen sistem yÃ¶neticisine baÅŸvurun.")
    else:
        with st.spinner("Veriler yÃ¼kleniyor..."):
            embeddings, metadata = load_embeddings(EMBEDDING_PATH)
            synonyms = load_synonyms(SYNONYM_PATH)
            expanded = expand_question_with_synonyms(soru, synonyms)

        with st.spinner("En uygun mevzuat maddeleri aranÄ±yor..."):
            results = retrieve_top_k(expanded, embeddings, metadata, k=3)

        with st.spinner("Cevap oluÅŸturuluyor..."):
            cevap = generate_answer(results, soru)

        st.markdown("---")
        st.markdown(f"### ğŸ“„ Soru: `{soru}`")
        st.markdown(cevap)

        puan = st.radio("Bu cevabÄ± nasÄ±l puanlarsÄ±nÄ±z?", [1, 2, 3, 4, 5], horizontal=True)
        st.success(f"TeÅŸekkÃ¼rler! {puan} puan verdiniz.")

